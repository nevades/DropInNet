package fintrex.dropinnet.repo;

import fintrex.dropinnet.dto.MainMenuDataDTO;
import fintrex.dropinnet.dto.TicketDTO;
import fintrex.dropinnet.dto.UserCardDTO;
import fintrex.dropinnet.model.Ticket;
import org.springframework.data.jdbc.repository.query.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

@Repository
public interface TicketRepo extends CrudRepository<Ticket, Integer> {

    @Query("select subject from ticket")
    Iterable<TicketDTO> getAllTicketDTO();

//    @Query("SELECT ts.`id`,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`type`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_type` tt ON tk.`ticket_type`=tt.`id`  WHERE `status`=t.`status` GROUP BY `ticket_type`)t) AS sub FROM `ticket` t JOIN `ticket_status` ts ON t.`status`=ts.`id` GROUP BY t.`status` UNION SELECT 7,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`type`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_type` tt ON tk.`ticket_type`=tt.`id` WHERE tk.`id` IN (SELECT t.`id` FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id`=t.`id` WHERE a.`user_id`=:uid AND t.`status`!=4) GROUP BY `ticket_type`)t)AS sub FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id`=t.`id` WHERE a.`user_id`=:uid AND t.`status`!=4  UNION  SELECT 8,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`type`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_type` tt ON tk.`ticket_type`=tt.`id` JOIN `ticket_log` tll ON tk.`id`=tll.`ticket` WHERE tll.`user`=:uid AND tll.`action` = 'Finish' GROUP BY `ticket_type`)t) AS sub FROM `ticket` t JOIN `ticket_log` tl ON t.`id`=tl.`ticket` WHERE tl.`user`=:uid AND `action`='finish' GROUP BY tl.`user` UNION SELECT 11,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM ( SELECT JSON_OBJECT('type', tt.`type`, 'cnt', COUNT(1)) AS `data` FROM `ticket` tk JOIN `ticket_type` tt ON tk.`ticket_type` = tt.`id` WHERE tk.`id` IN ( SELECT t.`id` FROM `ticket` t LEFT JOIN `ticket_log` tl ON t.`id` = tl.`ticket` AND tl.`action` = 'seen' WHERE tl.`date` IS NULL )GROUP BY tk.`ticket_type`) t) AS sub FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id` = t.`id`")
    @Query("SELECT ts.`id`,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`name`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_category_type` tt ON tk.`ticket_category_type`=tt.`id`  WHERE `status`=t.`status` GROUP BY `ticket_category_type`)t) AS sub FROM `ticket` t JOIN `ticket_status` ts ON t.`status`=ts.`id` GROUP BY t.`status` UNION SELECT 11,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`name`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_category_type` tt ON tk.`ticket_category_type`=tt.`id` WHERE tk.`id` IN (SELECT t.`id` FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id`=t.`id` WHERE a.`user_id`=:uid AND t.`status`!=4) GROUP BY `ticket_type`)t)AS sub FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id`=t.`id` WHERE a.`user_id`=:uid AND t.`status`!=4 UNION  SELECT 12,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`name`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_category_type` tt ON tk.`ticket_category_type`=tt.`id` JOIN `ticket_log` tll ON tk.`id`=tll.`ticket` WHERE tll.`user`=:uid AND tll.`action` = 'Finish' GROUP BY `ticket_type`)t) AS sub FROM `ticket` t JOIN `ticket_log` tl ON t.`id`=tl.`ticket` WHERE tl.`user`=:uid AND `action`='finish' GROUP BY tl.`user` UNION SELECT 13,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM ( SELECT JSON_OBJECT('type', tt.`type`, 'cnt', COUNT(1)) AS `data` FROM `ticket` tk JOIN `ticket_type` tt ON tk.`ticket_type` = tt.`id` WHERE tk.`id` IN ( SELECT t.`id` FROM `ticket` t LEFT JOIN `ticket_log` tl ON t.`id` = tl.`ticket` AND tl.`action` = 'seen' WHERE tl.`date` IS NULL )GROUP BY tk.`ticket_type`) t) AS sub FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id` = t.`id`")
    Iterable<MainMenuDataDTO> getCount(@Param("uid") String uid);
//   Application
    @Query("SELECT ts.`id`,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`name`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_category_type` tt ON tk.`ticket_category_type`=tt.`id`  WHERE `status`=t.`status` AND tk.`ticket_type`= 1  GROUP BY `ticket_category_type`)t) AS sub FROM `ticket` t JOIN `ticket_status` ts ON t.`status`=ts.`id`  WHERE t.`ticket_type`=1 GROUP BY t.`status` UNION SELECT 11,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`name`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_category_type` tt ON tk.`ticket_category_type`=tt.`id` WHERE tk.`ticket_type`=1 AND tk.`id` IN (SELECT t.`id` FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id`=t.`id` WHERE a.`user_id`=:uid AND t.`status`!=4) GROUP BY `ticket_type`)t)AS sub FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id`=t.`id` WHERE a.`user_id`=:uid AND t.`status`!=4 AND t.`ticket_type` = 1 UNION  SELECT 12,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`name`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_category_type` tt ON tk.`ticket_category_type`=tt.`id` JOIN `ticket_log` tll ON tk.`id`=tll.`ticket` WHERE tll.`user`=:uid AND tll.`action` = 'Finish' GROUP BY `ticket_type`)t) AS sub FROM `ticket` t JOIN `ticket_log` tl ON t.`id`=tl.`ticket` WHERE tl.`user`=:uid AND `action`='finish'  GROUP BY tl.`user` UNION SELECT 13,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM ( SELECT JSON_OBJECT('type', tt.`type`, 'cnt', COUNT(1)) AS `data` FROM `ticket` tk JOIN `ticket_type` tt ON tk.`ticket_type` = tt.`id` WHERE tk.`id` IN ( SELECT t.`id` FROM `ticket` t LEFT JOIN `ticket_log` tl ON t.`id` = tl.`ticket` AND tl.`action` = 'seen' WHERE tl.`date` IS NULL )GROUP BY tk.`ticket_type`) t) AS sub FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id` = t.`id` WHERE t.`ticket_type`=1")
    Iterable<MainMenuDataDTO> getApplicationCount(@Param("uid") String uid);
//    Hardware
    @Query("SELECT ts.`id`,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`name`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_category_type` tt ON tk.`ticket_category_type`=tt.`id`  WHERE `status`=t.`status` AND tk.`ticket_type`= 2  GROUP BY `ticket_category_type`)t) AS sub FROM `ticket` t JOIN `ticket_status` ts ON t.`status`=ts.`id`  WHERE t.`ticket_type`=2 GROUP BY t.`status` UNION SELECT 11,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`name`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_category_type` tt ON tk.`ticket_category_type`=tt.`id` WHERE tk.`ticket_type`=2 AND tk.`id` IN (SELECT t.`id` FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id`=t.`id` WHERE a.`user_id`=:uid AND t.`status`!=4) GROUP BY `ticket_type`)t)AS sub FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id`=t.`id` WHERE a.`user_id`=:uid AND t.`status`!=4 AND t.`ticket_type` = 2 UNION  SELECT 12,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM (SELECT JSON_OBJECT('type',tt.`name`,'cnt',COUNT(1)) AS `data`  FROM `ticket` tk JOIN `ticket_category_type` tt ON tk.`ticket_category_type`=tt.`id` JOIN `ticket_log` tll ON tk.`id`=tll.`ticket` WHERE tll.`user`=:uid AND tll.`action` = 'Finish' GROUP BY `ticket_type`)t) AS sub FROM `ticket` t JOIN `ticket_log` tl ON t.`id`=tl.`ticket` WHERE tl.`user`=:uid AND `action`='finish'  GROUP BY tl.`user` UNION SELECT 13,COUNT(1) AS tot,(SELECT JSON_ARRAYAGG(`data`) FROM ( SELECT JSON_OBJECT('type', tt.`type`, 'cnt', COUNT(1)) AS `data` FROM `ticket` tk JOIN `ticket_type` tt ON tk.`ticket_type` = tt.`id` WHERE tk.`id` IN ( SELECT t.`id` FROM `ticket` t LEFT JOIN `ticket_log` tl ON t.`id` = tl.`ticket` AND tl.`action` = 'seen' WHERE tl.`date` IS NULL )GROUP BY tk.`ticket_type`) t) AS sub FROM `ticket_assign` a JOIN `ticket` t ON a.`ticket_id` = t.`id` WHERE t.`ticket_type`=2")
    Iterable<MainMenuDataDTO> getHardwareCount(@Param("uid") String uid);

    @Query("SELECT IFNULL(`status`,-1) AS `status`,COUNT(id) AS no_of_tickets FROM ticket WHERE `ent_by` =:uid AND `status` IS NOT NULL GROUP BY `status` WITH ROLLUP UNION SELECT IFNULL(8,-1) AS `status`,COUNT(id) AS no_of_tickets FROM ticket WHERE `priority`= 'Recruitment' AND `ent_by` =:uid union SELECT IFNULL(10,-1) AS `status`,COUNT(*) AS no_of_tickets FROM dropinnet.ticket WHERE ent_by IN (SELECT id FROM hris_new.employee WHERE department = (SELECT department FROM hris_new.employee WHERE id =:uid))")
    Iterable<UserCardDTO> getCountByStatus(@Param("uid") String uid);
//    @Query("SELECT IFNULL(`status`,-1) AS `status`,COUNT(id) AS no_of_tickets FROM ticket WHERE `ent_by` =:uid AND `status` IS NOT NULL GROUP BY `status` WITH ROLLUP UNION SELECT IFNULL(8,-1) AS `status`,COUNT(id) AS no_of_tickets FROM ticket WHERE `priority`= 'Recruitment' AND `ent_by` =:uid")
//    Iterable<UserCardDTO> getCountByStatus(@Param("uid") String uid);
}
